{
  "idToTestNameHash": {
    "AdQu1": "Advanced Queries Counts the number of books",
    "AdQu2": "Advanced Queries Selects all long or movie books",
    "AdQu3": "Advanced Queries Selects books between 150 and 300 pages",
    "AdQu4": "Advanced Queries Orders books by pages",
    "AdQu5": "Advanced Queries Selects the longest book",
    "AdQu6": "Advanced Queries Aliases is_movie to \"Already Filmed\"",
    "AdQu7": "Advanced Queries Counts the number of books in each genre",
    "BaQu1": "Basic Queries Selects all books",
    "BaQu2": "Basic Queries Selects all titles and genres",
    "BaQu3": "Basic Queries Selects all books over 250 pages",
    "BaQu4": "Basic Queries Inserts Dune book",
    "BaQu5": "Basic Queries Updates short books to movies",
    "BaQu6": "Basic Queries Deletes Dune book",
    "FrScTe1": "From Scratch Tests Requires the database and table to have been restored somehow with all members of congress",
    "FrScTe2": "From Scratch Tests countAllMembers - Returns only the number of members",
    "FrScTe3": "From Scratch Tests countAllMembersAliased - Returns the aliased count",
    "FrScTe4": "From Scratch Tests countByParty - Counts the members of all 3 parties",
    "FrScTe5": "From Scratch Tests avgAgeAllMembersRounded - Returns the age of ALL members rounded to the nearest INT",
    "FrScTe6": "From Scratch Tests avgAgeByCongressOrdered - gets the average age of each congress rounded and ordered by congress ascending",
    "FrScTe7": "From Scratch Tests oldestAge - returns the oldest age of a congress member",
    "FrScTe8": "From Scratch Tests youngestAgeIndependent - returns the youngest age of an independent party member",
    "FrScTe9": "From Scratch Tests oldestMember - returns the selected properties of the oldest member of congress",
    "FrScTe10": "From Scratch Tests oldestChamber - returns only the chamber with the oldest average age",
    "FrScTe11": "From Scratch Tests currentCongressGenerationsAndAgesCounts - returns only the chamber with the oldest average age"
  },
  "testNameToIdHash": {
    "Advanced Queries Counts the number of books": "AdQu1",
    "Advanced Queries Selects all long or movie books": "AdQu2",
    "Advanced Queries Selects books between 150 and 300 pages": "AdQu3",
    "Advanced Queries Orders books by pages": "AdQu4",
    "Advanced Queries Selects the longest book": "AdQu5",
    "Advanced Queries Aliases is_movie to isMovie": "AdQu6",
    "Advanced Queries Counts the number of books in each genre": "AdQu7",
    "Basic Queries Selects all books": "BaQu1",
    "Basic Queries Selects all titles and genres": "BaQu2",
    "Basic Queries Selects all books over 250 pages": "BaQu3",
    "Basic Queries Inserts Dune book": "BaQu4",
    "Basic Queries Updates short books to movies": "BaQu5",
    "Basic Queries Deletes Dune book": "BaQu6",
    "Advanced Queries Aliases is_movie to \"Already Filmed\"": "AdQu6",
    "From Scratch Tests Selects all books": "FrScTe2",
    "From Scratch Tests Requires the database to have been restored somehow with all members of congress": "FrScTe1",
    "From Scratch Tests Requires the database and table to have been restored somehow with all members of congress": "FrScTe1",
    "From Scratch Tests countAllMembers - Returns only the number of members": "FrScTe2",
    "From Scratch Tests countAllMembersAliased - Returns the aliased count": "FrScTe3",
    "From Scratch Tests countByParty - Counts the members of all 3 parties": "FrScTe4",
    "From Scratch Tests avgAgeAllMembersRounded - Returns the age of ALL members rounded to the nearest INT": "FrScTe5",
    "From Scratch Tests avgAgeByCongressOrdered - gets the average age of each congress rounded and ordered by congress ascending": "FrScTe6",
    "From Scratch Tests oldestAge - returns the oldest age of a congress member": "FrScTe7",
    "From Scratch Tests youngestAgeIndependent - returns the youngest age of an independent party member": "FrScTe8",
    "From Scratch Tests oldestMember - returns the entire row of the oldest member of congress": "FrScTe9",
    "From Scratch Tests oldestMember - returns the selected properties of the oldest member of congress, b": "FrScTe9",
    "From Scratch Tests oldestMember - returns the selected properties of the oldest member of congress": "FrScTe9",
    "From Scratch Tests oldestChamber - returns the selected properties of the oldest member of congress, b": "FrScTe10",
    "From Scratch Tests oldestChamber - returns only the chamber with the oldest average age": "FrScTe10",
    "From Scratch Tests currentCongressGenerationsAndAgesCounts - returns only the chamber with the oldest average age": "FrScTe11"
  },
  "testScores": {
    "Advanced Queries": {
      "AdQu1": 1,
      "AdQu2": 1,
      "AdQu3": 1,
      "AdQu4": 1,
      "AdQu5": 1,
      "AdQu6": 1,
      "AdQu7": 1
    },
    "Basic Queries": {
      "BaQu1": 1,
      "BaQu2": 1,
      "BaQu3": 1,
      "BaQu4": 1,
      "BaQu5": 1,
      "BaQu6": 1
    },
    "From Scratch Tests": {
      "FrScTe1": 0,
      "FrScTe2": 0,
      "FrScTe3": 0,
      "FrScTe4": 0,
      "FrScTe5": 0,
      "FrScTe6": 0,
      "FrScTe7": 0,
      "FrScTe8": 0,
      "FrScTe9": 0,
      "FrScTe10": 0,
      "FrScTe11": 0
    }
  },
  "humanReadable": {
    "Advanced Queries": "7/7",
    "finalTestScore": "FINAL SCORE: 13/24",
    "Basic Queries": "6/6",
    "From Scratch Tests": "0/11"
  }
}